# Generated by Django 4.2.7 on 2025-09-13 14:53

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("products", "0006_alter_category_options"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AbandonedCart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recovery_emails_sent", models.PositiveIntegerField(default=0)),
                ("last_recovery_sent", models.DateTimeField(blank=True, null=True)),
                ("recovered", models.BooleanField(default=False)),
                ("recovered_at", models.DateTimeField(blank=True, null=True)),
                (
                    "abandonment_stage",
                    models.CharField(
                        choices=[
                            ("product_added", "Produto Adicionado"),
                            ("cart_viewed", "Carrinho Visualizado"),
                            ("checkout_started", "Checkout Iniciado"),
                        ],
                        default="product_added",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Carrinho Abandonado",
                "verbose_name_plural": "Carrinhos Abandonados",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        blank=True, db_index=True, max_length=40, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Ativo"),
                            ("abandoned", "Abandonado"),
                            ("converted", "Convertido"),
                            ("expired", "Expirado"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("recovery_email_sent", models.BooleanField(default=False)),
                ("recovery_email_sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recovery_token",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
            ],
            options={
                "verbose_name": "Carrinho",
                "verbose_name_plural": "Carrinhos",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="CartHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.CharField(
                        choices=[
                            ("created", "Criado"),
                            ("item_added", "Item Adicionado"),
                            ("item_removed", "Item Removido"),
                            ("item_updated", "Item Atualizado"),
                            ("coupon_applied", "Cupom Aplicado"),
                            ("coupon_removed", "Cupom Removido"),
                            ("abandoned", "Abandonado"),
                            ("recovery_sent", "Email de Recuperação Enviado"),
                            ("converted", "Convertido"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Histórico do Carrinho",
                "verbose_name_plural": "Históricos dos Carrinhos",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Item do Carrinho",
                "verbose_name_plural": "Itens do Carrinho",
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=50, unique=True, verbose_name="Código"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nome")),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "discount_type",
                    models.CharField(
                        choices=[("percentage", "Percentual"), ("fixed", "Valor Fixo")],
                        default="percentage",
                        max_length=20,
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Valor do Desconto",
                    ),
                ),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Máximo de Usos"
                    ),
                ),
                (
                    "used_count",
                    models.PositiveIntegerField(default=0, verbose_name="Vezes Usado"),
                ),
                (
                    "max_uses_per_user",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Máximo por Usuário"
                    ),
                ),
                ("valid_from", models.DateTimeField(verbose_name="Válido De")),
                ("valid_until", models.DateTimeField(verbose_name="Válido Até")),
                (
                    "minimum_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor Mínimo do Carrinho",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Cupom",
                "verbose_name_plural": "Cupons",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CouponUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("used_at", models.DateTimeField(auto_now_add=True)),
                (
                    "cart",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cart.cart",
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usages",
                        to="cart.coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Uso de Cupom",
                "verbose_name_plural": "Usos de Cupom",
                "ordering": ["-used_at"],
            },
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(
                fields=["code", "is_active"], name="cart_coupon_code_cf6157_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(
                fields=["valid_from", "valid_until"],
                name="cart_coupon_valid_f_68e9a4_idx",
            ),
        ),
        migrations.AddField(
            model_name="cartitem",
            name="cart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="items",
                to="cart.cart",
            ),
        ),
        migrations.AddField(
            model_name="cartitem",
            name="color",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="products.color",
            ),
        ),
        migrations.AddField(
            model_name="cartitem",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="products.product"
            ),
        ),
        migrations.AddField(
            model_name="carthistory",
            name="cart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="history",
                to="cart.cart",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="applied_coupon",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="cart.coupon",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="carts",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="abandonedcart",
            name="cart",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="abandonment_info",
                to="cart.cart",
            ),
        ),
        migrations.AddIndex(
            model_name="cartitem",
            index=models.Index(
                fields=["cart", "product"], name="cart_cartit_cart_id_4bd8c3_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="cartitem",
            constraint=models.UniqueConstraint(
                fields=("cart", "product", "color"), name="unique_cart_product_color"
            ),
        ),
        migrations.AddIndex(
            model_name="carthistory",
            index=models.Index(
                fields=["cart", "event"], name="cart_carthi_cart_id_7fadd3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carthistory",
            index=models.Index(
                fields=["timestamp"], name="cart_carthi_timesta_6ee89f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["user", "status"], name="cart_cart_user_id_2c8a21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["session_key", "status"], name="cart_cart_session_81d746_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["last_activity"], name="cart_cart_last_ac_251660_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="abandonedcart",
            index=models.Index(
                fields=["recovered", "last_recovery_sent"],
                name="cart_abando_recover_5ed60b_idx",
            ),
        ),
    ]
