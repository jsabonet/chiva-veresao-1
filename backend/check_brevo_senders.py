"""
Verifica informa√ß√µes dos senders configurados no Brevo
"""

import os
import sys
import django

# Setup Django
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'chiva_backend.settings')
django.setup()

from django.conf import settings

print("\n" + "="*60)
print("üìß VERIFICA√á√ÉO DE SENDERS NO BREVO")
print("="*60 + "\n")

try:
    import sib_api_v3_sdk
    from sib_api_v3_sdk.rest import ApiException
    
    # Configurar API
    configuration = sib_api_v3_sdk.Configuration()
    configuration.api_key['api-key'] = settings.BREVO_API_KEY
    
    # API de Senders
    api_instance = sib_api_v3_sdk.SendersApi(
        sib_api_v3_sdk.ApiClient(configuration)
    )
    
    print("üîç Buscando senders configurados...\n")
    
    # Listar senders
    api_response = api_instance.get_senders()
    
    if api_response.senders:
        print(f"üìã Encontrados {len(api_response.senders)} sender(s):\n")
        
        for i, sender in enumerate(api_response.senders, 1):
            print(f"{i}. {sender.name} <{sender.email}>")
            print(f"   ID: {sender.id}")
            print(f"   Ativo: {'‚úÖ Sim' if sender.active else '‚ùå N√£o'}")
            
            # Verificar se √© o sender atual
            if sender.email == settings.BREVO_SENDER_EMAIL:
                print(f"   ‚≠ê ESTE √â O SENDER CONFIGURADO NO .env")
            
            print()
    else:
        print("‚ö†Ô∏è  Nenhum sender encontrado!")
        print("   Voc√™ precisa adicionar um sender no Brevo.\n")
    
    print("="*60)
    print("\nüí° DICAS:\n")
    
    # Verificar se o sender atual est√° na lista
    current_sender_found = False
    if api_response.senders:
        for sender in api_response.senders:
            if sender.email == settings.BREVO_SENDER_EMAIL:
                current_sender_found = True
                break
    
    if not current_sender_found:
        print("‚ö†Ô∏è  ATEN√á√ÉO: O sender configurado no .env")
        print(f"   ({settings.BREVO_SENDER_EMAIL})")
        print("   N√ÉO est√° na lista de senders verificados!\n")
        print("üîß SOLU√á√ÉO:")
        print("   1. Acesse: https://app.brevo.com/")
        print("   2. V√° em: Settings ‚Üí Senders & IP")
        print("   3. Adicione e verifique: " + settings.BREVO_SENDER_EMAIL)
        print("\n   OU use um dos senders verificados acima.\n")
    else:
        print("‚úÖ Sender atual est√° verificado e ativo!")
        print("\nüîç Se emails n√£o est√£o chegando, verifique:")
        print("   1. Pasta SPAM/Lixo Eletr√¥nico")
        print("   2. Dashboard Brevo ‚Üí Campaigns ‚Üí Transactional")
        print("   3. Aguarde alguns minutos (pode haver atraso)")
        print("\n   Se dom√≠nio chivacomputer.co.mz n√£o tem DNS configurado,")
        print("   emails podem ir para spam. Configure SPF/DKIM/DMARC.\n")
    
except ApiException as e:
    print(f"‚ùå Erro da API: {e}")
    print(f"\nStatus: {e.status}")
    print(f"Reason: {e.reason}")
    if hasattr(e, 'body'):
        print(f"Body: {e.body}")

except Exception as e:
    print(f"‚ùå Erro: {e}")
    import traceback
    traceback.print_exc()

print("="*60 + "\n")
