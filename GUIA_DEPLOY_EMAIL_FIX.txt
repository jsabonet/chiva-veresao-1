╔════════════════════════════════════════════════════════════════╗
║  🚨 FIX CRÍTICO: Emails em Produção                            ║
║  Execute AGORA no servidor                                     ║
╚════════════════════════════════════════════════════════════════╝

┌────────────────────────────────────────────────────────────────┐
│ PASSO 1: SSH no Servidor                                       │
└────────────────────────────────────────────────────────────────┘

ssh root@seu-servidor-ip


┌────────────────────────────────────────────────────────────────┐
│ PASSO 2: Entrar no Diretório do Projeto                       │
└────────────────────────────────────────────────────────────────┘

cd /home/chiva/chiva-veresao-1


┌────────────────────────────────────────────────────────────────┐
│ PASSO 3: Pull das Mudanças                                     │
└────────────────────────────────────────────────────────────────┘

git pull origin main

# Deve mostrar:
# backend/requirements.prod.txt   | 3 ++-
# FIX_SIB_API_DOCKER.md            | XX ++++++
# deploy_email_fix.sh              | XX ++++++


┌────────────────────────────────────────────────────────────────┐
│ PASSO 4: Parar e Rebuild Container                            │
└────────────────────────────────────────────────────────────────┘

docker compose down
docker compose build backend
docker compose up -d


┌────────────────────────────────────────────────────────────────┐
│ PASSO 5: Verificar Logs                                       │
└────────────────────────────────────────────────────────────────┘

docker compose logs backend | tail -20

# Procure por:
# [INFO] Booting worker with pid: XX


┌────────────────────────────────────────────────────────────────┐
│ PASSO 6: TESTE CRÍTICO                                        │
└────────────────────────────────────────────────────────────────┘

docker compose exec backend bash
python teste_verificacao_emails_final.py

# DEVE aparecer:
# ✅ [WEBHOOK] Email de confirmação: True
# ✅ [WEBHOOK] Email de status: True
# ✅ [WEBHOOK] Email admin: True


┌────────────────────────────────────────────────────────────────┐
│ PASSO 7: Verificar Pacote Instalado                           │
└────────────────────────────────────────────────────────────────┘

docker compose exec backend pip list | grep sib-api

# Deve retornar:
# sib-api-v3-sdk    7.6.0


┌────────────────────────────────────────────────────────────────┐
│ ✅ SUCESSO!                                                     │
└────────────────────────────────────────────────────────────────┘

Se tudo acima funcionou:
1. ✅ Container está rodando
2. ✅ sib-api-v3-sdk está instalado
3. ✅ Emails retornam True
4. ✅ Sistema pronto para enviar emails!


┌────────────────────────────────────────────────────────────────┐
│ 🧪 TESTE REAL (Opcional mas Recomendado)                      │
└────────────────────────────────────────────────────────────────┘

1. Fazer compra no site
2. Usar email REAL
3. Pagar com M-Pesa
4. Aguardar 10 segundos
5. Verificar email (incluindo SPAM)


┌────────────────────────────────────────────────────────────────┐
│ 🔍 Monitorar Logs em Tempo Real                               │
└────────────────────────────────────────────────────────────────┘

docker compose logs -f backend | grep "WEBHOOK\|POLLING"

# Durante uma compra, deve aparecer:
# 🚀 [WEBHOOK] Iniciando envio de emails...
# ✅ [WEBHOOK] Email de confirmação: True
# ✅ [WEBHOOK] Email de status: True


╔════════════════════════════════════════════════════════════════╗
║  ⏱️  TEMPO TOTAL: 5-10 minutos                                 ║
║  📊 STATUS: Aguardando execução no servidor                    ║
╚════════════════════════════════════════════════════════════════╝


═══════════════════════════════════════════════════════════════════
  🚨 SE ALGO DER ERRADO
═══════════════════════════════════════════════════════════════════

PROBLEMA: sib-api-v3-sdk ainda não instalado

SOLUÇÃO TEMPORÁRIA:
docker compose exec backend pip install sib-api-v3-sdk==7.6.0
docker compose restart backend

Depois fazer rebuild adequado:
docker compose down
docker compose build --no-cache backend
docker compose up -d


═══════════════════════════════════════════════════════════════════
  📞 SUPORTE
═══════════════════════════════════════════════════════════════════

Se precisar de ajuda, me envie a saída de:

docker compose logs backend | tail -50
docker compose exec backend pip list | grep sib
docker compose exec backend cat requirements.prod.txt | grep sib


═══════════════════════════════════════════════════════════════════
